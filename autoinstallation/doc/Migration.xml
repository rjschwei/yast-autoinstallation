  <chapter id="Migration">
    <title>Legacy and foreign Configuration formats</title>
    <section id="migratefromyast1">
      <title>Migration from &yast1; and &alice;</title>
      <para>
	ALICE, SuSEs former auto-installation system was a system built around
	the auto-installation features that were available with &yast1;. In order
	to be able to use existing ALICE configuration files and resources, a
	special option is provided in the configuration system  will let you convert
	ALICE  configuration files into a control file readable by
	&autoyast2;.
      </para>
      <para>
	&alice; uses &yast1; for the installation of a Linux System. This is
	done by creating a boot medium with the needed control file (<filename>info</filename>)
	from a set of configuration files maintained in a CVS repository. The
	<emphasis>info</emphasis> file has the traditional format used with &yast1;.
      </para>
      
  
	<para>
	  The system configuration is done almost entirely after the system is
	  installed and is initiated using the <emphasis>%post</emphasis> section of the &alice; RPM
	  package.
	</para>
	<section>
	  <title>
	    &alice; modules
	  </title>
	  <para>	
	    Each of ALICE modules perform certain tasks and requires one or
	    multiple configuration files. The modules are shell scripts that are
	    invoked after installation of the machine to setup different services
	    on the client. 
	  </para>
	  <para>
	    &yast2; offers an extensive and rich interface to the installed system
	    which replaces most of the modules that were available with &alice; 
	    The following is a list of all &alice; modules, their
	    function and how their functionality is provided by &yast2; modules which are
	    already available or which can be integrated easily:
	  </para>
	  
	  <para>
	    The  modules <emphasis>prepare_alice</emphasis> and
	    <emphasis>make_all</emphasis> provided the base and main scripts of all
	    &alice; modules.	  
	    The module <emphasis>prepare_alice</emphasis> is called right after the initial
	    installation process - which is done after &yast1; has  finished
	    installation packages.
	  </para>
	  <para>
	    With &yast2;, the alternative to these modules is  part of the system
	    and is not an addition or extension. This means that &yast2; configures
	    the system in one single process and not, as with &alice; in two
	    different, independent steps.
	  </para>
	  <para>The following table show how the result of some &alice; modules
	    can be accomplished with &yast2;
	  </para>
	  <table frame="top" id="alice.modules">
	    <title id="alice.modules.title">&alice; vs. &yast2; modules</title>
	    <tgroup cols="4">
	      <thead>
		<row>
		  <entry>Module</entry>
		  <entry>&alice;</entry>
		  <entry>&yast2;</entry>
		  <entry>Concerned files</entry>
		</row>
	      </thead>
	      <tbody>
		<row>
		  <entry>User configuration</entry>
		  
		  <entry>Adding users is performed without any consistency
		    checks.</entry>
		  <entry>Using &yast2; users module</entry>
		  <entry><filename>/etc/passwd</filename></entry>
		</row>
		<row>
		  <entry>Group configuration</entry>
		  
		  <entry>Adding groups is performed without any consistency
		    checks.</entry>
		  <entry>Using &yast2; users module</entry>
		  <entry><filename>/etc/group</filename></entry>
		</row>
		<row>
		  <entry>Services</entry>
		  <entry>X</entry>
		  <entry>-</entry>
		  <entry><filename>/etc/services</filename></entry>
		</row>

		<row>
		  <entry>Inetd</entry>
		  <entry>X</entry>
		  <entry>Using the inetd module</entry>
		  <entry><filename>/etc/inetd.conf</filename></entry>
		</row>
		<row>
		  <entry>Syslog</entry>
		  <entry>X</entry>
		  <entry></entry>
		  <entry><filename>/etc/syslog.conf</filename></entry>
		</row>
		<row>
		  <entry>Lilo</entry>
		  <entry>X</entry>
		  <entry>X</entry>
		  <entry><filename>/etc/lilo.conf</filename></entry>
		</row>
		<row>
		  <entry>SNMP</entry>
		  <entry>X</entry>
		  <entry>-</entry>
		  <entry><filename>/etc/ucdsnmpd.conf</filename></entry>
		</row>
		<row>
		  <entry>Cron</entry>
		  <entry>X</entry>
		  <entry>-</entry>
		  <entry><filename>/etc/crontab</filename></entry>
		</row>
		<row>
		  <entry>hosts</entry>
		  <entry>X</entry>
		  <entry>X</entry>
		  <entry><filename>/etc/hosts</filename></entry>
		</row>    
		<row>
		  <entry>Routing</entry>
		  <entry>X</entry>
		  <entry>X</entry>
		  <entry><filename>/etc/route.conf</filename></entry>
		</row> 
		<row>
		  <entry>Printer</entry>
		  <entry>X</entry>
		  <entry>X</entry>
		  <entry><filename>/etc/printcap</filename></entry>
		</row> 
		<row>
		  <entry>SSH</entry>
		  <entry>X</entry>
		  <entry>-</entry>
		  <entry><filename>/etc/ssh</filename></entry>
		</row> 
		<row>
		  <entry>Kernel modules</entry>
		  <entry>X</entry>
		  <entry>X</entry>
		  <entry><filename>/etc/modules.conf</filename></entry>
		</row> 
		
	      </tbody>
	    </tgroup>
	  </table>
	</section>
	<section>
	  <title>
	    Other configuration options with &yast2; and &alice;
	  </title>
	  <para>
	    ALICE completed most of the configuration using the system
	    configuration file <filename>/etc/rc.config</filename>. This interface to the
	    system does not exist anymore with new SuSE products. Instead,
	    configuration options are now available in <filename>/etc/sysconfig</filename>.
	  </para>
	  <para>
	    Entries in <filename>/etc/sysconfig</filename> can be easily set and
	    modified using &yast2; and AutoYaST. For network services it is recommended to use the
	    relevant &yast2; modules dealing with networking , rather than modifying
	    <filename>/etc/sysconfig/network</filename> directly.
	  </para>
	</section>
	
      </section>
  
    <section id="importkickstart">
      <title>Redhat Kickstart</title>
      <para>
	The Configuration Management System offers an option for importing
	a foreign auto-installation configuration file using the
	<emphasis>Kickstart</emphasis>
	system. To import a <emphasis>Kickstart</emphasis> file, you only need
	to enter the path of the configuration file and decide how to handle
	the data, by either saving the result into a file directly or by
	loading the resulting AutoYaST compatible control file into the
	Configuration Management System to add more configuration options
	available with SuSE. The following sections describe some limitations
	and issues to consider when importing from a foreign source:
      </para>
      <section>
	<title>Software selections and packages</title>
	<para>
	  It is not possible at the moment to import package selections and
	  single package listing into AutoYaST. The packages will be
	  added to the control file, but manual selection of the desired
	  packages is needed. The reason is that package groups and package
	  names  might differ depending on the source distribution
	</para>
      </section>
      <section>
	<title>User scripts</title>
	<para>
	  Kickstart offers two types of scripts, <emphasis>pre</emphasis> and
	  <emphasis>post</emphasis> scripts. More scripts (&gt;2)  are
	  not supported as in AutoYaST. So it might be needed to split large
	  scripts into smaller components depending on the function to make
	  such scripts manageable
	</para>
      </section>
   
    </section>
  </chapter>
  <!--
  Local Variables:
  mode: xml
  sgml-parent-document: ("autoyast2.xml" "book" "part")
  End:
  -->
