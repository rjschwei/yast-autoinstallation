  <section><title>Introduction</title>
    <para>
      If you want to mirror the current patches and updates locally and
      distribute them to other computers on your network, which might be
      necessary if the machines are protected by a firewall or if you want to
      save bandwidth.
    </para>
  </section>
  <section>
    <title>
      Mirroring the Update Packages
    </title>
    <section>
      <title>Mirroring updates for Box Products</title>
      <para>
	This section is intended for mirroring patches and update packages from
	<emphasis>ftp.suse.com</emphasis> and its mirrors worldwide.
      </para>
   
    <para>
      First, find a server that allows mirroring (not ftp.suse.com) and read
      the server's mirror policy carefully. 
      For mirroring purposes, use, for example, <command>rsync</command>.
    </para>
    <screen>

rsync -tvrl --stats --exclude=*.src.rpm --delete \
      mirror.ac.uk::ftp.suse.com/pub/suse/i386/update/9.0/  /dist/updates/i386/update/9.0/

    </screen>

      <para>
	In the example above, the entire SuSE-9.0 update directory with the
	exception of the <emphasis>src.rpm</emphasis> packages will be
	mirrored. The target is<filename> /dist/updates/i386/update/9.0/</filename>. Modify the
	<command>rsync</command> command as desired to mirror only certain
	directories or to limit the bandwidth. For more information, refer to
	the man pages of <command>rsync</command>. To find out which
	directories are available via <command>rsync</command>, use
      </para>
      <screen>

rsync -n mirror.ac.uk::

      </screen>

      <para>
	A cron entry can be used to automate the mirroring. For more
	information, check the manpage for crontab.
      </para>

      <para>
	The target should point directly to the directory reachable via FTP. An
	FTP server might be required for this purpose.
      </para>
       </section>
    <section>
      <title>Mirroring Updates for Business Products</title>
      <para>
	This section describes how to mirror patches and update packages
	for business products from the official SuSE support site. To access
	the updates you will need a login and a password.</para>

      <para>
	The business product updates are not available on the public FTP
	server and are not mirrored like the box products as described in the
	previous section. To create a repository of the updates localy you will
	have to configure one system to fetch the updates periodically from the
	support site and keep the downloaded files on that system.
      </para>
      
      <para>
	Getting the updates to a local machine is described in the following
	section using the command line tools of the <emphasis>YaST Online
	  Update</emphasis> (YOU).
      </para>
      <para>Once the files are downloaded, they can be found in the directory
	<filename>/var/lib/YaST2/you/i386/update/SuSE-SLES/8</filename> (for
	SLES8) and under <filename>/var/lib/YaST2/you/i386/update/</filename>
	for other products (Change the architecture in the path to match the
	architecture of your system). These directories can be provided via FTP
	to other clients either directly or after being copied to the root of
	your FTP server. All these tasks can be automated using cron jobs.
      </para>
    </section>

  </section>

  <section>
    <title>
      Client Setup
    </title>

    <para>
      The entry <emphasis>YAST2_LOADFTPSERVER</emphasis> can be set either with
      YaST2 and the sysconfig editor or manually, for example:
    </para>
    <screen>

pico /etc/sysconfig/onlineupdate

    </screen>

    <para>
      Change the configuration to:
    </para>
    <screen>

YAST2_LOADFTPSERVER="no"

    </screen>

    <para>
      YOU server names are saved in the file
      <filename>/etc/suseservers</filename>. 
Insert your local FTP server in the first position:
    </para>

    <screen>

ftp://192.168.0.1/updates/

    </screen>

    <para>
      Make sure you enter the right path. YaST2 error messages are logged in
      the file <filename>/var/log/YaST2/y2log</filename>. If the clients report
      errors, search for the possible causes in this file first.
      From now on, when the YaST2 Online Update is started, you will see your
      server in the server selection.
    </para>
  </section>
  <section>
    <title>Starting YaST Online Update</title>
    <para>
      There are three possibilities to start YOU in SuSE Linux: in
      graphical mode from the YaST2 menu, through the NCurses interface, or
      with the command <command>online_update</command>.
    </para>
    <para>
      The tool <command>online_update</command> is specially suitable for cron jobs and
      scripts. The following options are available with the
      <command>online_update</command>
    (<filename>/usr/bin/online_update</filename>) tool. The list of available
    options can be shown by running <command> online_update -h</command>.
  </para>
    <screen>

# online_update -h
Usage: online-update [options] [types]

-u, --url URL            Base URL of directory tree used to get patches from.
                         Supported protocols: http, ftp, smb, nfs, cd, dvd, file.
                         If no protocol is given a local file is assumed.
                         Examples: 'ftp://ftp.suse.com/pub/suse', 'cd:///',
                                   'file:/var/lib/YaST2/you/mnt'
                                   '/var/lib/YaST2/you/mnt'

-g, --download-only      Only download patches, don't install.
-i, --install-only       Install downloaded patches, don't download.

-q, --quick-check        Quick check for new updates. Doesn't check for types
                         of updates.
-k, --check              Check for new updates.

-c, --show-config        Show configuration. Don't do anything.

-p, --product PRODUCT    Name of product to get patches for.
-v, --version VERSION    Version of product to get patches for.
-a, --architecture ARCH  Base architecture of product to get patches for.
-l, --language LANGCODE  Language used to show patch descriptions.

-r, --reload             Reload patches from server.
-d, --dry-run            Dry run. Only get patches, don't install them.
-n, --no-sig-check       No signature check of downloaded files.

-s, --show-patches       Show list of patches (Additionaly use -d to only show list
                         of patches without installing them).
-V, --verbose            Be verbose.
-D, --debug              Debug output.

security | recommended | document | optional   Types of patches to be installed.

  </screen>
  <para>The options displayed above are from the SuSE Linux 9.0. SLES8 has the
    following options:</para>

  <screen>

% online_update -h
Usage: online-update [-u url] [-p product] [-v version] [-a arch] [-d] [-s] \
    [-n] [-g] [-i] \
    [security] [recommended] [document] [optional]

-u url      Base URL of directory tree used to get patches from.

-g          Only download patches, don't install.
-i          Install downloaded patches, don't download.

-p product  Name of product to get patches for.
-v version  Version of product to get patches for.
-a arch     Base architecture of product to get patches for.

-d          Dry run. Only get patches, don't install them.
-n          No signature check of downloaded files.

-s          Show list of patches.
-V          Be verbose.
-D          Debug output.

security | recommended | document | optional   Types of patches to be
    installed.

  </screen>
  <para>
    SuSE Linux 9.0 offers an option to create the cron job using the
    <emphasis>YOU</emphasis> interface.
  </para>
  <para>
    Although there are different  possibilities to set a cronjob, only the easiest
    option is described. Proceed as follows:
  </para>

  <orderedlist>
      <listitem>
	<para>Login as root</para>
      </listitem>    
      <listitem>
	<para>Start the crontab editor with<command> crontab -e</command></para>
      </listitem>      
      <listitem>
	<para>Insert the lines:
	  <screen>

MAILTO=""
13 3 * * 0   /usr/bin/online_update -g
53 3 * * 0   /usr/bin/online_update -i
	  </screen>
	</para>
	<para>
	  The first 5 figures of the two lower lines are read from left to right and stand for:
	</para>
<screen>
13=Minutes, 3=hours, *=Day of the month, unimportant, *=Month of the year,  unimportant, 0=Sunday
</screen>
	<para>
	  In this example, the cronjob is started by the first entry Sundays at
	  3.13 a.m. The second entry starts it 40 minutes later, at 3.53.
	  The line <emphasis>MAILTO=""</emphasis> prevents root from receiving the output of
	  YaST2-ncurses per e-mail. This can also be be omitted.
	</para>
      </listitem>
    </orderedlist>
    <para>
      Now the cron job is ready, the cron daemon is automatically restarted
      and the cronjob has been added to the file <filename>/var/spool/cron/tabs/root</filename>.
    </para>
    <note>
      <para>
	Do not use the same time as in the example. Otherwise, the FTP server
	may be overloaded at the configured time or the number of accesses will exceed
	the maximum number allowed.
      </para>
    </note>
    <note>
      <para>
	Note that when updating without surveillance, you can miss important
	messages from <command>online_update</command>. Some packages may cause problems during
	the update, for example, glibc or the kernel. In other cases, the user
	might have to intervene (e.g., for a reboot or to run lilo). For this
	reason, use this solution only if you know what you are doing.
      </para>
    </note>

  </section>


  


<!--
  <section>
    <title>Creating a Patch CD-ROM</title>
    <para>
      There is also the possibilty to create a CD-ROM with all the patches.
      Once you have created such a CD-ROM, start YaST2 Control Center and
      choose Patch CD Update.
    </para>


    <para>
      The patch structure and the directories where the patches are located
      should be exactly the same as on the FTP server. The path on the CD-ROM must
      start with the <emphasis>architecture</emphasis> directory, e.g. the path
      on the FTP server is:</para>

<screen>

      /pub/suse/{ARCHITECTURE}/update/{SuSE-Version}/patches/*

</screen>
	
    <para>
      then the directory structure on the CD ROM has to be:
    </para>

<screen>

{ARCHITECTURE}/update/{SuSE-Version}/patches/*

</screen>
	

    <para>
      So to make a Patch CD-ROM the important point is use of graft-points
      option of mkisofs, for example:
    </para>
    <screen>

-graft-points i386/update/9.0=/usr/local/update/i386/update/9.0
    </screen>
  </section>
	-->
